version: '3.8'

# ------------ services ------------
services:

  mlflow:
    restart: always
    build: 
      context: ./
      dockerfile:  ./docker/mlflow/Dockerfile
    image: mlflow-server
    container_name: mlflow-server
    ports:
      - "${MLFLOW_PORT}:${MLFLOW_PORT}" # exposed port : target port:
    networks:
      - nwnet
    command: >
      mlflow server
      --host 0.0.0.0

# Dev env
  fastapi:
    build: 
      context: ./
      dockerfile:  ./docker/frontend/Dockerfile.fastapi
    image: fastapi
    container_name: fastapi
    environment:
      - MONITOR_PATH=/app/data/03-predictions
      - REFERENCE_PATH=/app/data/02-processed
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    networks:
      - nwnet
    ports:
      - "${FASTAPI_PORT}:${FASTAPI_PORT}"
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data:rw

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    environment:
      - FASTAPI_PORT=${FASTAPI_PORT}
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - nwnet 


# ----------- storage volumes -------------
volumes:
  postgres-data:
    driver: local
  alertmanager-data:
    driver: local


# -------------- networks --------------
networks:
  nwnet:
    name: nwnet
    driver: bridge

